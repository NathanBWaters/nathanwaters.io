{"version":3,"sources":["../../source/plugin/plugin.js"],"names":[],"mappings":"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","file":"plugin.js","sourcesContent":["import path from 'path'\n\nimport write_assets  from './write assets'\nimport notify_stats  from './notify stats'\n\nimport Log from './../tools/log'\n\nimport { exists, clone, convert_from_camel_case, alias_properties_with_camel_case } from './../helpers'\n\nimport { default_webpack_assets, normalize_options } from './../common'\n\n// a Webpack plugin\nexport default function Webpack_isomorphic_tools_plugin(options)\n{\n\t// take the passed in options\n\tthis.options = convert_from_camel_case(clone(options))\n\n\t// add missing fields, etc\n\tnormalize_options(this.options)\n\n\t// logging\n\tthis.log = new Log('webpack-isomorphic-tools/plugin', { debug: this.options.debug })\n\n\t// assets regular expressions (based on extensions).\n\t// will be used in loaders and in write_assets\n\tthis.regular_expressions = {}\n\n\t// for each user defined asset type\n\tfor (let asset_type of Object.keys(this.options.assets))\n\t{\n\t\tconst description = this.options.assets[asset_type]\n\n\t\t// create a regular expression for this file extension (or these file extensions)\n\t\tthis.regular_expressions[asset_type] = description.regular_expression || Webpack_isomorphic_tools_plugin.regular_expression(description.extensions)\n\t}\n}\n\n// creates a regular expression for this file extension (or these file extensions)\nWebpack_isomorphic_tools_plugin.prototype.regular_expression = function(asset_type)\n{\n\tif (!exists(this.regular_expressions[asset_type]))\n\t{\n\t\tthrow new Error(`There's no asset type \"${asset_type}\" defined in webpack-isomorphic-tools configuration. Perhaps you didn't spell it correctly.`)\n\t}\n\n\treturn this.regular_expressions[asset_type]\n}\n\n// creates a regular expression for this file extension (or these file extensions)\nWebpack_isomorphic_tools_plugin.regular_expression = function(extensions)\n{\n\tif (!Array.isArray(extensions))\n\t{\n\t\tthrow new Error(`You were expected to pass a list of extensions (an array). Instead got: ${extensions}. Maybe you were looking for the instance method istead of the class method of this plugin?`)\n\t}\n\n\tlet matcher\n\tif (extensions.length > 1)\n\t{\n\t\tmatcher = `(${extensions.join('|')})`\n\t}\n\telse\n\t{\n\t\tmatcher = extensions\n\t}\n\n\treturn new RegExp(`\\\\.${matcher}$`)\n}\n\n// sets development mode flag to whatever was passed (or true if nothing was passed)\n// (development mode allows asset hot reloading when used with webpack-dev-server)\nWebpack_isomorphic_tools_plugin.prototype.development = function(flag)\n{\n\t// set development mode flag\n\tthis.options.development = exists(flag) ? flag : true\n\n\t/* istanbul ignore else */\n\tif (this.options.development)\n\t{\n\t\tthis.log.debug('entering development mode')\n\t}\n\telse\n\t{\n\t\tthis.log.debug('entering production mode')\n\t}\n\n\t// allows method chaining\n\treturn this\n}\n\n// applies the plugin to the Webpack build\nWebpack_isomorphic_tools_plugin.prototype.apply = function(compiler)\n{\n\t// Webpack configuration\n\tconst webpack_configuration = compiler.options\n\n\t// validate webpack configuration\n\tif (!webpack_configuration.context)\n\t{\n\t\tthrow new Error('You must specify \".context\" in your webpack configuration')\n\t}\n\n\t// project base path, required to output webpack-assets.json\n\tthis.options.project_path = webpack_configuration.context\n\n\t// resolve webpack-assets.json file path\n\tconst webpack_assets_path = path.resolve(this.options.project_path, this.options.webpack_assets_file_path)\n\n\t// resolve webpack-stats.json file path\n\tconst webpack_stats_path = path.resolve(this.options.project_path, this.options.webpack_stats_file_path)\n\n\t// selfie\n\tconst plugin = this\n\n\t// when all is done\n\t// https://github.com/webpack/docs/wiki/plugins\n\tcompiler.plugin('done', function(stats)\n\t{\n\t\tplugin.log.debug('------------------- Started -------------------')\n\n\t\tconst json = stats.toJson\n\t\t({\n\t\t\tcontext: webpack_configuration.context\n\t\t})\n\n\t\t// output some info to the console if in development mode\n\t\tif (plugin.options.development)\n\t\t{\n\t\t\t// outputs stats info to the console\n\t\t\t// (only needed in development mode)\n\t\t\tnotify_stats(stats, json, plugin.options.verbose)\n\t\t}\n\n\t\t// assets base path (on disk or on the network)\n\t\t//\n\t\t// (first search for the `devServer.publicPath` setting,\n\t\t//  then fallback to the generic `publicPath`)\n\t\t//\n\t\t// (using `publicPath` from webpack stats here\n\t\t//  as opposed to `webpack_configuration.output.publicPath`\n\t\t//  because it is processed by webpack replacing things like `[hash]`)\n\t\t//\n\t\tconst assets_base_url = (webpack_configuration.devServer && webpack_configuration.devServer.publicPath) ? webpack_configuration.devServer.publicPath : json.publicPath\n\n\t\t// write webpack-assets.json with assets info\n\t\twrite_assets(json,\n\t\t{\n\t\t\tdevelopment         : plugin.options.development,\n\t\t\tdebug               : plugin.options.debug,\n\t\t\tassets              : plugin.options.assets,\n\t\t\talias               : plugin.options.alias,\n\t\t\tproject_path        : plugin.options.project_path,\n\t\t\tassets_base_url,\n\t\t\twebpack_assets_path : webpack_assets_path,\n\t\t\twebpack_stats_path  : webpack_stats_path,\n\t\t\toutput              : default_webpack_assets(),\n\t\t\tregular_expressions : plugin.regular_expressions\n\t\t},\n\t\tplugin.log)\n\n\t\tplugin.log.debug('------------------- Finished -------------------')\n\t})\n}\n\n// a sample module source parser for webpack url-loader\n// (works for images, fonts, and i guess for everything else, should work for any file type)\nWebpack_isomorphic_tools_plugin.url_loader_parser = function(module, options, log)\n{\n\treturn module.source\n}\n\n// a sample module source parser for webpack css-loader\n// (without css-loader \"modules\" feature support)\nWebpack_isomorphic_tools_plugin.css_loader_parser = function(module, options, log)\n{\n\treturn module.source + '\\n module.exports = module.exports.toString();'\n}\n\n// a sample module source parser for webpack css-loader\n// (with css-loader \"modules\" feature support)\nWebpack_isomorphic_tools_plugin.css_modules_loader_parser = function(module, options, log)\n{\n\treturn module.source + '\\n module.exports = exports.locals || {}; module.exports._style = exports.toString();'\n}\n\n// a filter for getting a css module when using it with style-loader\n//\n// in development mode there's webpack \"style-loader\",\n// so the module with module.name equal to the asset path is not what's needed\n// (because what that module does is it creates a <style/> tag on the page).\n// the module with the CSS styles is the one with a long name:\nWebpack_isomorphic_tools_plugin.style_loader_filter = function(module, regular_expression, options, log)\n{\n\tconst css_loader = module.name.split('!')[0]\n\treturn regular_expression.test(module.name) &&\n\t\t// The paths below have the form of \"/~/css-loader\"\n\t\t// and not the form of \"./~/css-loader\"\n\t\t// because in some (non-standard) cases\n\t\t// Webpack project context can be set \n\t\t// not to project root folder.\n\t\t//\n\t\t// For a discussion see:\n\t\t// https://github.com/halt-hammerzeit/webpack-isomorphic-tools/pull/68\n\t\t// (there the `context` is set to the \"${project_root}/src\" folder\n\t\t//  so that the asset paths in `webpack-assets.json` wouldn't\n\t\t//  contain the \"./src\" prefix and therefore they will be found\n\t\t//  when require()d from code in \"./target\"\n\t\t//  which is compiled with Babel from the \"./src\" folder)\n\t\t//\n\t\t// I personally don't compile sources on the server side,\n\t\t// so I haven't thought of better ways of doing all that.\n\t\t//\n\t\t(css_loader.indexOf('/~/css-loader') > 0 ||\n\t\t css_loader.indexOf('/~/.npminstall/css-loader') > 0 ||\n\t\t css_loader.indexOf('/~/.store/css-loader') > 0)\n}\n\n// extracts css style file path\nWebpack_isomorphic_tools_plugin.style_loader_path_extractor = function(module, options, log)\n{\n\treturn module.name.slice(module.name.lastIndexOf('!') + 1)\n}\n\n// alias camel case for those who prefer it\nalias_properties_with_camel_case(Webpack_isomorphic_tools_plugin.prototype)\nalias_properties_with_camel_case(Webpack_isomorphic_tools_plugin)\n"]}